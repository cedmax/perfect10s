import React, { useState, useCallback, memo } from "react";

const PlayIcon = () => <svg enableBackground="new 0 0 396.802 396.802" viewBox="0 0 396.802 396.802" xmlns="http://www.w3.org/2000/svg"><path fill="white" d="m200.361 312.663c0 9.324-6.564 13.065-14.587 8.316l-92.482-45.969c-8.023-4.75-14.587-16.263-14.587-25.586v-102.044c0-9.322 6.564-20.836 14.587-25.585l92.482-45.969c8.023-4.75 14.587-1.007 14.587 8.316z"/><path fill="white" d="m57.308 249.69c0 9.324-7.628 16.952-16.951 16.952h-23.406c-9.323 0-16.951-7.628-16.951-16.952v-102.574c0-9.323 7.628-16.951 16.951-16.951h23.406c9.323 0 16.951 7.628 16.951 16.951z"/><path fill="white" d="m274.516 291.944c22.353-25.472 34.887-58.256 35.295-92.315.408-33.999-11.284-67.023-32.92-92.989-.582-.695-1.188-1.362-1.802-1.977-5.365-5.365-10.735-6.15-14.732-2.155l-12.356 12.357c-6.536 6.536-1.745 11.866.557 14.428.296.329.574.639.811.926 32.753 39.693 32.411 97.033-.815 136.34l-.319.373c-1.968 2.294-6.579 7.663-.575 13.668l12.979 12.977c2.235 2.236 4.478 3.324 6.666 3.233 3.198-.134 5.335-2.658 6.75-4.329.162-.191.315-.371.461-.537z"/><path fill="white" d="m396.789 200.786c.602-56.983-19.721-111.779-57.222-154.288-.246-.281-.511-.586-.789-.91-.851-.987-1.815-2.107-2.9-3.193-4.965-4.964-9.33-5.637-12.97-1.996l-13.697 13.698c-5.943 5.942.546 13.363 4.034 17.349l.667.767c63.563 73.822 62.121 183.904-3.356 256.059-2.038 2.245-7.452 8.212-1.873 13.791l14.475 14.474c1.477 1.478 3.148 2.208 4.968 2.172 3.342-.066 6.143-2.69 7.957-4.658 38.546-41.762 60.105-96.192 60.706-153.265z"/></svg>

export default memo(({ tracks, currentSong }) => {
  const [isExpanded, setExpanded] = useState();
  const toggleExpand = useCallback(() => {
    setExpanded((isExpanded) => !isExpanded);
  }, [setExpanded]);

  return (
    <span className="tracks">
      {tracks &&
        (isExpanded ? (
          <ol onClick={toggleExpand}>
            {tracks.map((track) => (
              <li key={track.name}>
                <div className="numb">{currentSong ===track.id ? <PlayIcon /> : `${track.track_number}.`}</div>{track.name}
              </li>
            ))}
          </ol>
        ) : (
          <span onClick={toggleExpand}>
            {tracks.length} <small>tracks</small>
          </span>
        ))}
    </span>
  );
});
